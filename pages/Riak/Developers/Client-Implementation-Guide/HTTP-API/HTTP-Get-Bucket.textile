h1. Get Bucket

Reads the bucket properties and/or keys.

h2. Request


```bash
GET /riak/bucket
```

Optional query parameters:
* *props=[true|false]* - whether to return the bucket properties (true is the default)
* *keys=[true|false|stream]* - whether to return the keys stored in the bucket. (false is the default)

h2. Response

Normal status codes:
* 200 OK

Important headers:
* Content-Type - application/json

The JSON object in the response will contain up to two entries, "props" and "keys", which are present or missing, according to the optional query parameters.  The default is for both to be present.

If "keys=stream", the response will be transferred using chunked-encoding, where each chunk is a JSON object.  The first chunk will contain the "props" entry (if props was not set to false).  Subsequent chunks will contain individual JSON objects with the "keys" entry containing a sublist of the total keyset (some sublists may be empty).

h2. Example

```bash
$ curl -v http://127.0.0.1:8098/riak/test
* About to connect() to 127.0.0.1 port 8098 (#0)
*   Trying 127.0.0.1... connected
* Connected to 127.0.0.1 (127.0.0.1) port 8098 (#0)
> GET /riak/test HTTP/1.1
> User-Agent: curl/7.19.7 (universal-apple-darwin10.0) libcurl/7.19.7 OpenSSL/0.9.8l zlib/1.2.3
> Host: 127.0.0.1:8098
> Accept: */*
>
< HTTP/1.1 200 OK
< Vary: Accept-Encoding
< Server: MochiWeb/1.1 WebMachine/1.7.1 (participate in the frantic)
< Date: Wed, 14 Jul 2010 18:23:14 GMT
< Content-Type: application/json
< Content-Length: 368
<
* Connection #0 to host 127.0.0.1 left intact
* Closing connection #0
{"props":{"name":"test","n_val":3,"allow_mult":false,"last_write_wins":false,"precommit":[],"postcommit":[],"chash_keyfun":{"mod":"riak_core_util","fun":"chash_std_keyfun"},"linkfun":{"mod":"riak_kv_wm_link_walker","fun":"mapreduce_linkfun"},"old_vclock":86400,"young_vclock":20,"big_vclock":50,"small_vclock":10,"r":"quorum","w":"quorum","dw":"quorum","rw":"quorum"}
```
