h1. HTTP Store Luwak Object

Stores a large object in Luwak. Storing an object comes in two forms, depending on whether you want to use a key of your choosing, or let Riak assign a key to a new object.

h2. Request

```bash
POST /luwak      # Riak-defined key
PUT /luwak/key   # User-defined key
```

For the sake of compatibility with older clients, @POST@ is also acceptable in the form where the key is specified.

Important headers:

* @Content-Type@ must be set for the stored object. Set what you expect to receive back when next requesting it.
* @X-Riak-Meta-*@ any additional metadata headers that should be stored with the object.
* @X-Luwak-Block-Size@ the block size, in bytes, to use for this object

_+This request must include a body (entity).+_

h2. Response

Normal status codes:
* @201 Created@ (when storing without key)
* @204 No Content@ (when storing with key)

Typical error codes:
* @400 Bad Request@

Important headers:
* @Location@ - a relative URL to the newly-created object

h2. Example: Storing Without Key


```bash
$ curl -i -d 'this is a test' -H "Content-Type: text/plain" http://127.0.0.1:8098/luwak
HTTP/1.1 201 Created
Vary: Accept-Encoding
Server: MochiWeb/1.1 WebMachine/1.7.2 (participate in the frantic)
Location: /luwak/FwDjezaP9JsSWztOVKkJ5egJp1a
Date: Mon, 11 Oct 2010 09:19:57 GMT
Content-Type: application/json
Content-Length: 0

```

h2. Example: Storing With Key


```bash
$ curl -i -X PUT -d '{"bar":"baz"}' -H "Content-Type: application/json" http://127.0.0.1:8098/luwak/file.json
HTTP/1.1 204 No Content
Vary: Accept-Encoding
Server: MochiWeb/1.1 WebMachine/1.7.2 (participate in the frantic)
Date: Mon, 11 Oct 2010 09:22:21 GMT
Content-Type: application/json
Content-Length: 0

```
